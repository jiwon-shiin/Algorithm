# 백준 1463 1로 만들기 (신지원)

def makeOne(N):
    if N == 1: #N이 1일 경우 0을 반환
        return 0
    elif N == 2 or N == 3: #N이 2 또는 3일 경우 한 번만에 1을 만들 수 있으므로 1을 반환
        return 1
    DP = [0]*(N+1) #DP 인덱스를 수와 동일하게 하기 위해 N+1개로 DP를 만듦
    DP[1] = 0 #1,2,3은 바닥조건으로 각 0,1,1로 설정
    DP[2] = 1
    DP[3] = 1

    for i in range(4,N+1): #DP 테이블을 채워줌
        DP[i] = min(DP[i-1]+1, DP[i//2]+(i%2)+1, DP[i//3]+(i%3)+1) #세가지 방법으로 이 수를 도달할 수 있는데 이 중 최소를 구하여 DP를 채운다. 
        #비교할 때 i-1는 i에서 연산 한 번으로 도달 가능하므로 1을 더한 값 ,i//2는 연산 한 번과 이에 도달할 때까지 (i%2만큼), i//3도 연산 한 번과 i%3만큼 더한 값을 비교해서 최소를 구한다.
    return DP[-1] #1을 만들기 위한 최소 횟수를 찾고자 하는 정수는 마지막에 위치하므로 횟수를 출력

N = int(input())
print(makeOne(N)) #함수를 실행하여 최솟값을 출력